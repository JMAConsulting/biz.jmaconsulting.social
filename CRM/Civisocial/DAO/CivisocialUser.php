<?php
/*
+--------------------------------------------------------------------+
| CiviCRM version 4.7                                                |
+--------------------------------------------------------------------+
| Copyright CiviCRM LLC (c) 2004-2015                                |
+--------------------------------------------------------------------+
| This file is a part of CiviCRM.                                    |
|                                                                    |
| CiviCRM is free software; you can copy, modify, and distribute it  |
| under the terms of the GNU Affero General Public License           |
| Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
|                                                                    |
| CiviCRM is distributed in the hope that it will be useful, but     |
| WITHOUT ANY WARRANTY; without even the implied warranty of         |
| MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
| See the GNU Affero General Public License for more details.        |
|                                                                    |
| You should have received a copy of the GNU Affero General Public   |
| License and the CiviCRM Licensing Exception along                  |
| with this program; if not, contact CiviCRM LLC                     |
| at info[AT]civicrm[DOT]org. If you have questions about the        |
| GNU Affero General Public License or the licensing of CiviCRM,     |
| see the CiviCRM license FAQ at http://civicrm.org/licensing        |
+--------------------------------------------------------------------+
 */
/**
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2015
 *
 * Generated from xml/schema/CRM/Civisocial/CivisocialUser.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */
require_once 'CRM/Core/DAO.php';
require_once 'CRM/Utils/Type.php';
class CRM_Civisocial_DAO_CivisocialUser extends CRM_Core_DAO {
  /**
   * static instance to hold the table name
   *
   * @var string
   */
  static $_tableName = 'civicrm_civisocial_user';
  /**
   * static instance to hold the field values
   *
   * @var array
   */
  static $_fields = NULL;
  /**
   * static instance to hold the keys used in $_fields for each field.
   *
   * @var array
   */
  static $_fieldKeys = NULL;
  /**
   * static instance to hold the FK relationships
   *
   * @var string
   */
  static $_links = NULL;
  /**
   * static instance to hold the values that can
   * be imported
   *
   * @var array
   */
  static $_import = NULL;
  /**
   * static instance to hold the values that can
   * be exported
   *
   * @var array
   */
  static $_export = NULL;
  /**
   * static value to see if we should log any modifications to
   * this table in the civicrm_log table
   *
   * @var boolean
   */
  static $_log = FALSE;
  /**
   * Unique User ID
   *
   * @var int unsigned
   */
  public $id;
  /**
   * FK to Contact ID that owns that account
   *
   * @var int unsigned
   */
  public $contact_id;
  /**
   * OAuth Provider
   *
   * @var string
   */
  public $oauth_provider;
  /**
   * User ID for facebook, to be used to match friends etc.
   *
   * @var string
   */
  public $social_user_id;
  /**
   * Access Token Provided by OAuth Provider
   *
   * @var string
   */
  public $access_token;
  /**
   * When was the civisocial user was created.
   *
   * @var timestamp
   */
  public $created_date;
  /**
   * When was the the civisocial user was created or modified or deleted.
   *
   * @var timestamp
   */
  public $modified_date;
  /**
   * class constructor
   *
   * @return civicrm_civisocial_user
   */
  public function __construct() {
    $this->__table = 'civicrm_civisocial_user';
    parent::__construct();
  }
  /**
   * Returns foreign keys and entity references
   *
   * @return array
   *   [CRM_Core_Reference_Interface]
   */
  public static function getReferenceColumns() {
    if (!self::$_links) {
      self::$_links = static::createReferenceColumns(__CLASS__);
      self::$_links[] = new CRM_Core_Reference_Basic(self::getTableName(), 'contact_id', 'civicrm_contact', 'id');
    }
    return self::$_links;
  }
  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!(self::$_fields)) {
      self::$_fields = array(
        'id' => array(
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => ts('Civisocial User ID'),
          'description' => 'Unique User ID',
          'required' => TRUE,
          'import' => TRUE,
          'where' => 'civicrm_civisocial_user.id',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => TRUE,
        ),
        'contact_id' => array(
          'name' => 'contact_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => ts('Contact ID'),
          'description' => 'FK to Contact ID that owns that account',
          'FKClassName' => 'CRM_Contact_DAO_Contact',
        ),
        'oauth_provider' => array(
          'name' => 'oauth_provider',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('OAuth Provider'),
          'description' => 'OAuth Provider',
          'maxlength' => 128,
          'size' => 30,
          'export' => TRUE,
          'where' => 'civicrm_civisocial_user.oauth_provider',
          'headerPattern' => '',
          'dataPattern' => '',
          'html' => array(
            'type' => 'Text',
          ),
        ),
        'social_user_id' => array(
          'name' => 'social_user_id',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Social User ID'),
          'description' => 'User identifier given by Social Media, to be used to match friends etc.',
          'required' => FALSE,
          'maxlength' => 128,
          'size' => 128,
          'export' => TRUE,
          'where' => 'civicrm_civisocial_user.social_user_id',
          'headerPattern' => '',
          'dataPattern' => '',
          'default' => 'NULL',
        ),
        'access_token' => array(
          'name' => 'access_token',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Access Token Secret provided by OAuth Provider'),
          'description' => 'Access Token Secret Provided by OAuth Provider',
          'required' => FALSE,
          'maxlength' => 511,
          'size' => 511,
          'export' => TRUE,
          'where' => 'civicrm_civisocial_user.access_token',
          'headerPattern' => '',
          'dataPattern' => '',
          'default' => 'NULL',
        ),
        'created_date' => array(
          'name' => 'created_date',
          'type' => CRM_Utils_Type::T_TIMESTAMP,
          'title' => ts('Created Date'),
          'description' => 'When was the civisocial user was created.',
          'required' => FALSE,
          'export' => TRUE,
          'where' => 'civicrm_civisocial_user.created_date',
          'headerPattern' => '',
          'dataPattern' => '',
          'default' => 'NULL',
        ),
        'modified_date' => array(
          'name' => 'modified_date',
          'type' => CRM_Utils_Type::T_TIMESTAMP,
          'title' => ts('Modified Date'),
          'description' => 'When was the the civisocial user was created or modified or deleted.',
          'required' => FALSE,
          'export' => TRUE,
          'where' => 'civicrm_civisocial_user.modified_date',
          'headerPattern' => '',
          'dataPattern' => '',
          'default' => 'CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP',
        ),
      );
    }
    return self::$_fields;
  }
  /**
   * Returns an array containing, for each field, the arary key used for that
   * field in self::$_fields.
   *
   * @return array
   */
  public static function &fieldKeys() {
    if (!(self::$_fieldKeys)) {
      self::$_fieldKeys = array(
        'id' => 'id',
        'contact_id' => 'contact_id',
        'oauth_provider' => 'oauth_provider',
        'social_user_id' => 'social_user_id',
        'access_token' => 'access_token',
        'created_date' => 'created_date',
        'modified_date' => 'modified_date',
      );
    }
    return self::$_fieldKeys;
  }
  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }
  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }
  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    if (!(self::$_import)) {
      self::$_import = array();
      $fields = self::fields();
      foreach ($fields as $name => $field) {
        if (CRM_Utils_Array::value('import', $field)) {
          if ($prefix) {
            self::$_import['al_user'] = &$fields[$name];
          }
          else {
            self::$_import[$name] = &$fields[$name];
          }
        }
      }
    }
    return self::$_import;
  }
  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    if (!(self::$_export)) {
      self::$_export = array();
      $fields = self::fields();
      foreach ($fields as $name => $field) {
        if (CRM_Utils_Array::value('export', $field)) {
          if ($prefix) {
            self::$_export['al_user'] = &$fields[$name];
          }
          else {
            self::$_export[$name] = &$fields[$name];
          }
        }
      }
    }
    return self::$_export;
  }

}
